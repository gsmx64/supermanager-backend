# Generated by Django 5.1.6 on 2025-09-09 03:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceBuilds',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_builds_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_builds_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_builds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceDisks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_disks_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_disks_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_disks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceMarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_marks_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_marks_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_marks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceModels',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_models_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_models_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_models',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceProcessors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_processors_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_processors_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_processors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceRAMs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_rams_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_rams_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_rams',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceSystems',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_systems_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_systems_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_systems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceTypes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_types_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_types_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_device_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('manager', models.CharField(blank=True, max_length=200)),
                ('manager_email', models.CharField(blank=True, max_length=200)),
                ('manager_phone', models.CharField(blank=True, max_length=200)),
                ('manager_mobile', models.CharField(blank=True, max_length=200)),
                ('collaborator', models.CharField(blank=True, max_length=200)),
                ('collaborator_email', models.CharField(blank=True, max_length=200)),
                ('collaborator_phone', models.CharField(blank=True, max_length=200)),
                ('collaborator_mobile', models.CharField(blank=True, max_length=200)),
                ('phone', models.CharField(blank=True, max_length=200)),
                ('mobile', models.CharField(blank=True, max_length=200)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('state', models.CharField(blank=True, max_length=200)),
                ('zip_code', models.CharField(blank=True, max_length=12)),
                ('country', models.CharField(blank=True, max_length=200)),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_locations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('internal_id', models.CharField(max_length=200)),
                ('status', models.PositiveIntegerField(default=1)),
                ('hostname', models.CharField(blank=True, max_length=200)),
                ('disk_internal_id', models.CharField(blank=True, max_length=200)),
                ('disk_serial', models.CharField(blank=True, max_length=200)),
                ('network_ipv4', models.CharField(blank=True, max_length=200)),
                ('network_ipv6', models.CharField(blank=True, max_length=200)),
                ('network_mac', models.CharField(blank=True, max_length=200)),
                ('remote_id', models.CharField(blank=True, max_length=200)),
                ('serial', models.CharField(blank=True, max_length=200)),
                ('sector', models.CharField(blank=True, max_length=200)),
                ('user_owner', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField()),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_build', to='api.devicebuilds')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_by_creator', to=settings.AUTH_USER_MODEL)),
                ('disk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_disk', to='api.devicedisks')),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_mark', to='api.devicemarks')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_model', to='api.devicemodels')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_processor', to='api.deviceprocessors')),
                ('ram', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_ram', to='api.devicerams')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices_by_updater', to=settings.AUTH_USER_MODEL)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_system', to='api.devicesystems')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_type', to='api.devicetypes')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_location', to='api.locations')),
            ],
            options={
                'db_table': 'api_devices',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LocationZones',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('code_name', models.CharField(blank=True, max_length=50)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField()),
                ('manager', models.CharField(blank=True, max_length=200)),
                ('manager_email', models.CharField(blank=True, max_length=200)),
                ('manager_phone', models.CharField(blank=True, max_length=200)),
                ('manager_mobile', models.CharField(blank=True, max_length=200)),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_zones_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_zones_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_location_zones',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='locations',
            name='location_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations_location_zone', to='api.locationzones'),
        ),
        migrations.CreateModel(
            name='NotificationTypes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(default=1)),
                ('is_core', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_types_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_types_by_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_notification_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(default=1)),
                ('module', models.CharField(blank=True, max_length=200)),
                ('module_id', models.PositiveIntegerField(blank=True)),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_by_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_by_updater', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_types', to='api.notificationtypes')),
            ],
            options={
                'db_table': 'api_notifications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=12, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('about', models.CharField(blank=True, max_length=250, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_userprofile',
                'managed': True,
            },
        ),
    ]
