name: 02 - Deploy to Production
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build_dockerhub.yml"]
    types:
      - completed
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Copy docker-compose.yml to remote server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
        REMOTE_PATH: ${{ secrets.SSH_REMOTE_PATH }}
      run: |
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' > private_key.pem
        chmod 600 private_key.pem
        mkdir -p ~/.ssh
        ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
        eval "$(ssh-agent -s)"
        ssh-add private_key.pem
        scp -o StrictHostKeyChecking=no docker-compose-backend.yml $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/docker-compose.yml
    - name: Run docker-compose on remote server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
        REMOTE_PATH: ${{ secrets.SSH_REMOTE_PATH }}
      run: |
        ssh -i private_key.pem -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "cd $REMOTE_PATH && docker-compose pull && docker-compose up --env-file .env.sm.prod -d"
        rm -f private_key.pem
        ssh -i private_key.pem -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "cd $REMOTE_PATH && docker-compose pull && docker-compose up --env-file .env.sm.prod -d"
